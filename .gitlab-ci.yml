stages:
    - build
    - deploy
    - notify
build:
    stage: build
    environment:
        name: sit
    script:
        - echo "start build image!"
        - docker build -t cm-fe:latest .
    artifacts:
        expire_in: 1 week
        reports:
            dotenv: build_status.env
    tags:
        - cm-fe
    rules:
        - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "release/sit"
    after_script:
        - echo "BUILD_STATUS=$CI_JOB_STATUS" > build_status.env    
deploy:
    stage: deploy
    script:
        - echo "kill old container!"
        - docker ps -a -q --filter "name=cm-fe" | xargs -r docker rm -f
        - echo "start run container!"
        - docker run -d -p 127.0.0.1:8000:80 --name cm-fe cm-fe:latest
        - echo "deploy done!"
        - docker ps -a -f "name=cm-fe"
        - docker logs cm-fe
    tags:
        - cm-fe
    rules:
        - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "release/sit"
    after_script:
        - echo "DEPLOY_STATUS=$CI_JOB_STATUS" > deploy_status.env
    artifacts:
        reports:
            dotenv: deploy_status.env        
notify:
    stage: notify
    rules:
        - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "release/sit"
    script:
        - echo "Gửi thông báo đến Telegram"
        - pwd
        - |
            # Load the statuses from previous jobs
            if [ -f build_status.env ]; then
            source build_status.env
            fi
            if [ -f deploy_status.env ]; then
            source deploy_status.env
            fi

            printenv | sort

            # Kiểm tra trạng thái của pipeline
            if [ "$BUILD_STATUS" = "success" ] && [ "$DEPLOY_STATUS" = "success" ]; then
            MESSAGE="✅ [FrontEnd] Đã được deploy thành công!.%0A"
            MESSAGE="${MESSAGE}Service: $CI_PROJECT_NAME %0A"
            MESSAGE="${MESSAGE}Branch: $CI_COMMIT_BRANCH %0A"
            MESSAGE="${MESSAGE}Merged By: $GITLAB_USER_LOGIN %0A"
            MESSAGE="${MESSAGE}Title: $CI_COMMIT_TITLE"
            else
            MESSAGE="❌ [FrontEnd] deploy thất bại!.%0A"
            MESSAGE="${MESSAGE}Service: $CI_PROJECT_NAME %0A"
            MESSAGE="${MESSAGE}Branch: $CI_COMMIT_BRANCH %0A"
            MESSAGE="${MESSAGE}Merged By: $GITLAB_USER_LOGIN %0A"
            MESSAGE="${MESSAGE}Title: $CI_COMMIT_TITLE"
            fi

            curl -s -X POST "https://api.telegram.org/bot${TELE_BOT_TOKEN}/sendMessage" \
                -d chat_id="-4637085760" \
                -d text="$MESSAGE" \
                -d parse_mode="Markdown"
    variables:
        GIT_STRATEGY: none
    tags:
        - cm-fe

